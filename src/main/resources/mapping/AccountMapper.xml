<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaweb.dao.AccountMapper">
	<resultMap id="BaseResultMap" type="com.javaweb.entity.Account">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="accountnumber" jdbcType="CHAR" property="accountnumber" />
		<result column="passwords" jdbcType="CHAR" property="passwords" />
		<result column="accountflag" jdbcType="CHAR" property="accountflag" />
		<result column="userinfoid" jdbcType="INTEGER" property="userinfoid" />
	</resultMap>
	<sql id="Base_Column_List">
		id, accountnumber, passwords, accountflag, userinfoid
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from account
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from account
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.javaweb.entity.Account">
		insert into account (id, accountnumber, passwords,
		accountflag, userinfoid)
		values (#{id,jdbcType=INTEGER}, #{accountnumber,jdbcType=CHAR},
		#{passwords,jdbcType=CHAR},
		#{accountflag,jdbcType=CHAR}, #{userinfoid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.javaweb.entity.Account" useGeneratedKeys="true" keyProperty="id">
		insert into account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="accountnumber != null">
				accountnumber,
			</if>
			<if test="passwords != null">
				passwords,
			</if>
			<if test="accountflag != null">
				accountflag,
			</if>
			<if test="userinfoid != null">
				userinfoid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="accountnumber != null">
				#{accountnumber,jdbcType=CHAR},
			</if>
			<if test="passwords != null">
				#{passwords,jdbcType=CHAR},
			</if>
			<if test="accountflag != null">
				#{accountflag,jdbcType=CHAR},
			</if>
			<if test="userinfoid != null">
				#{userinfoid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.javaweb.entity.Account">
		update account
		<set>
			<if test="accountnumber != null">
				accountnumber = #{accountnumber,jdbcType=CHAR},
			</if>
			<if test="passwords != null">
				passwords = #{passwords,jdbcType=CHAR},
			</if>
			<if test="accountflag != null">
				accountflag = #{accountflag,jdbcType=CHAR},
			</if>
			<if test="userinfoid != null">
				userinfoid = #{userinfoid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.javaweb.entity.Account">
		update account
		set accountnumber = #{accountnumber,jdbcType=CHAR},
		passwords = #{passwords,jdbcType=CHAR},
		accountflag = #{accountflag,jdbcType=CHAR},
		userinfoid = #{userinfoid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 登录 -->
	<select id="selectcount" resultType="com.javaweb.views.LoginBean">
		select account.accountnumber,
		account.passwords,account.accountflag,
		userinfo.username,
		userinfo.jobnumber,userinfo.sectorid,sector.deptname,userinfo.id as userinfoid
		from account LEFT JOIN
		userinfo on(account.userinfoid=userinfo.id)
		LEFT JOIN sector
		on(userinfo.sectorid=sector.id)
		where account.accountnumber=#{accountnumber}
		and account.passwords =#{passwords}
		and account.accountflag='1'
	</select>
	
	<!-- 查询account -->
	<select id="selectByAccountNum" resultMap="BaseResultMap">
		select * 
		from account
		where account.accountnumber=#{accountnumber}
	</select>
</mapper>